{"ast":null,"code":"import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, isNumber, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\r\n * React hook that tracks state of a CSS media query\r\n *\r\n * @param query the media query to match\r\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n  var _React$useState = React.useState(queries.map(function (query) {\n      return isSupported ? !!env.window.matchMedia(query).matches : false;\n    })),\n    matches = _React$useState[0],\n    setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\n  // to unload and then load each time the dependency changes. This causes\n  // Media Query Events to be missed. The event listeners should only be unloaded\n  // when the component unloads.\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (_, index) {\n      var listener = function listener(mqlEvent) {\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\n          return mediaQuery.media === mqlEvent.media;\n        }); // As the event listener is on the media query list, any time the\n        // listener is called, we know there is a change. There's no need\n        // to compare the previous matches with current. Using\n        // setMatches(matches => {...}) provides access to the current matches\n        // state.  Trying to access matches outside the setMatches function\n        // would provide data from the the time of instantiation (stale).\n\n        setMatches(function (matches) {\n          var currentMatches = matches.map(function (x) {\n            return x;\n          });\n          currentMatches[queryIndex] = mqlEvent.matches;\n          return currentMatches;\n        });\n      }; // Listening to the 'change' event on the Media Query List Object\n      // is more performant as the callback is only invoked when a specified\n      // media query is matched. Using addEventListener on the window object\n      // to listen for the resize event will call the callback on every\n      // viewport resize.\n\n      if (typeof mediaQueryList[index].addEventListener === \"function\") {\n        mediaQueryList[index].addEventListener(\"change\", listener);\n      } else {\n        mediaQueryList[index].addListener(listener);\n      }\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        if (typeof mediaQueryList[index].removeEventListener === \"function\") {\n          mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\n        } else {\n          mediaQueryList[index].removeListener(listenerList[index]);\n        }\n      });\n    };\n  }, []);\n  return matches;\n}\n\n/**\r\n * Visibility\r\n *\r\n * React component to control the visibility of its\r\n * children based on the current breakpoint\r\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n    hide = props.hide,\n    children = props.children;\n  var _useMediaQuery = useMediaQuery(breakpoint),\n    show = _useMediaQuery[0];\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n    breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n    below = props.below,\n    above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n  return query;\n}\n\n/**\r\n * React hook used to get the user's animation preference.\r\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n    prefersReducedMotion = _useMediaQuery[0];\n  return prefersReducedMotion;\n}\n/**\r\n * React hook for getting the user's color mode preference.\r\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n    isLight = _useMediaQuery2[0],\n    isDark = _useMediaQuery2[1];\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction createMediaQueries(breakpoints) {\n  return Object.entries(breakpoints) // sort css units in ascending order to ensure media queries are generated\n  // in the correct order and reference to each other correctly aswell\n  .sort(function (a, b) {\n    return Number.parseInt(a[1], 10) > Number.parseInt(b[1], 10) ? 1 : -1;\n  }).map(function (_ref, index, arr) {\n    var breakpoint = _ref[0],\n      minWidth = _ref[1];\n    // given a following breakpoint\n    var next = arr[index + 1]; // this breakpoint must end prior the threshold of the next\n\n    var maxWidth = next ? next[1] : undefined;\n    var query = createMediaQueryString(minWidth, maxWidth);\n    return {\n      minWidth: minWidth,\n      maxWidth: maxWidth,\n      breakpoint: breakpoint,\n      query: query\n    };\n  });\n}\n/**\r\n * Create a media query string from the breakpoints,\r\n * using a combination of `min-width` and `max-width`.\r\n */\n\nfunction createMediaQueryString(minWidth, maxWidth) {\n  var hasMinWidth = parseInt(minWidth, 10) >= 0;\n  if (!hasMinWidth && !maxWidth) {\n    return \"\";\n  }\n  var query = \"(min-width: \" + toMediaString(minWidth) + \")\";\n  if (!maxWidth) {\n    return query;\n  }\n  if (query) {\n    query += \" and \";\n  }\n  query += \"(max-width: \" + toMediaString(subtract(maxWidth)) + \")\";\n  return query;\n}\nvar measurementRegex = /([0-9]+\\.?[0-9]*)/;\nvar calculateMeasurement = function calculateMeasurement(value, modifier) {\n  if (typeof value === \"number\") {\n    return \"\" + (value + modifier);\n  }\n  return value.replace(measurementRegex, function (match) {\n    return \"\" + (parseFloat(match) + modifier);\n  });\n};\n/**\r\n * 0.01 and 0.1 are too small of a difference for `px` breakpoint values\r\n *\r\n * @see https://github.com/chakra-ui/chakra-ui/issues/2188#issuecomment-712774785\r\n */\n\nfunction subtract(value) {\n  return calculateMeasurement(value, value.endsWith(\"px\") ? -1 : -0.01);\n}\n/**\r\n * Convert media query value to string\r\n */\n\nfunction toMediaString(value) {\n  return isNumber(value) ? value + \"px\" : value;\n}\nvar _excluded = [\"query\"],\n  _excluded2 = [\"query\"],\n  _excluded3 = [\"query\"];\n\n/**\r\n * React hook used to get the current responsive media breakpoint.\r\n *\r\n * @param defaultBreakpoint default breakpoint name\r\n * (in non-window environments like SSR)\r\n *\r\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\r\n * to get the default breakpoint value from the user-agent\r\n */\nfunction useBreakpoint(defaultBreakpoint) {\n  var _useTheme = useTheme(),\n    breakpoints = _useTheme.breakpoints;\n  var env = useEnvironment();\n  var mediaQueries = React__default.useMemo(function () {\n    return createMediaQueries(_extends({\n      base: \"0px\"\n    }, breakpoints));\n  }, [breakpoints]);\n  var _React$useState = React__default.useState(function () {\n      if (env.window.matchMedia) {\n        var maxBreakpoint;\n        mediaQueries.forEach(function (_ref) {\n          var query = _ref.query,\n            breakpoint = _objectWithoutPropertiesLoose(_ref, _excluded);\n          var mediaQuery = env.window.matchMedia(query);\n          if (mediaQuery.matches) {\n            maxBreakpoint = breakpoint;\n          }\n        });\n        if (maxBreakpoint) {\n          return maxBreakpoint;\n        }\n      }\n      if (!defaultBreakpoint) {\n        return undefined;\n      }\n      var mediaQuery = mediaQueries.find(function (_ref2) {\n        var breakpoint = _ref2.breakpoint;\n        return breakpoint === defaultBreakpoint;\n      });\n      if (mediaQuery) {\n        mediaQuery.query;\n        var breakpoint = _objectWithoutPropertiesLoose(mediaQuery, _excluded2);\n        return breakpoint;\n      }\n      return undefined;\n    }),\n    currentBreakpoint = _React$useState[0],\n    setCurrentBreakpoint = _React$useState[1];\n  var current = currentBreakpoint == null ? void 0 : currentBreakpoint.breakpoint;\n  var update = React__default.useCallback(function (query, breakpoint) {\n    if (query.matches && current !== breakpoint.breakpoint) {\n      setCurrentBreakpoint(breakpoint);\n    }\n  }, [current]);\n  React__default.useEffect(function () {\n    var listeners = new Set();\n    mediaQueries.forEach(function (_ref3) {\n      var query = _ref3.query,\n        breakpoint = _objectWithoutPropertiesLoose(_ref3, _excluded3);\n      var mediaQuery = env.window.matchMedia(query); // trigger an initial update to determine media query\n\n      update(mediaQuery, breakpoint);\n      var handleChange = function handleChange() {\n        update(mediaQuery, breakpoint);\n      }; // add media query-listener\n\n      mediaQuery.addListener(handleChange); // push the media query list handleChange\n      // so we can use it to remove Listener\n\n      listeners.add({\n        mediaQuery: mediaQuery,\n        handleChange: handleChange\n      });\n      return function () {\n        // clean up 1\n        mediaQuery.removeListener(handleChange);\n      };\n    });\n    return function () {\n      // clean up 2: for safety\n      listeners.forEach(function (_ref4) {\n        var mediaQuery = _ref4.mediaQuery,\n          handleChange = _ref4.handleChange;\n        mediaQuery.removeListener(handleChange);\n      });\n      listeners.clear();\n    };\n  }, [mediaQueries, breakpoints, update, env.window]);\n  return current;\n}\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n  var index = Object.keys(values).indexOf(breakpoint);\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n    stopIndex -= 1;\n  }\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n  return undefined;\n}\n\n/**\r\n * React hook for getting the value for the current breakpoint from the\r\n * provided responsive values object.\r\n *\r\n * @param values\r\n * @param defaultBreakpoint default breakpoint name\r\n * (in non-window environments like SSR)\r\n *\r\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\r\n * to get the default breakpoint value from the user-agent\r\n *\r\n * @example\r\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\r\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\r\n   * Get the non-number breakpoint keys from the provided breakpoints\r\n   */\n\n  var breakpoints = Object.keys(theme.breakpoints);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n      value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };","map":{"version":3,"names":["useTheme","isBrowser","__DEV__","memoizedGet","isNumber","breakpoints","isArray","fromEntries","arrayToObjectNotation","React","React__default","useEnvironment","useSafeLayoutEffect","useLayoutEffect","useEffect","useMediaQuery","query","env","queries","Array","isSupported","window","_React$useState","useState","map","matchMedia","matches","setMatches","undefined","mediaQueryList","listenerList","_","index","listener","mqlEvent","queryIndex","findIndex","mediaQuery","media","currentMatches","x","addEventListener","addListener","forEach","removeEventListener","removeListener","Visibility","props","breakpoint","hide","children","_useMediaQuery","show","isVisible","rendered","Hide","useQuery","createElement","displayName","Show","getBreakpoint","theme","value","_props$breakpoint","below","above","bpBelow","bpAbove","usePrefersReducedMotion","prefersReducedMotion","useColorModePreference","_useMediaQuery2","isLight","isDark","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","createMediaQueries","entries","sort","a","b","Number","parseInt","_ref","arr","minWidth","next","maxWidth","createMediaQueryString","hasMinWidth","toMediaString","subtract","measurementRegex","calculateMeasurement","modifier","replace","match","parseFloat","endsWith","_excluded","_excluded2","_excluded3","useBreakpoint","defaultBreakpoint","_useTheme","mediaQueries","useMemo","base","maxBreakpoint","find","_ref2","currentBreakpoint","setCurrentBreakpoint","current","update","useCallback","listeners","Set","_ref3","handleChange","add","_ref4","clear","getClosestValue","values","breakpoints$1","stopIndex","_key","useBreakpointValue","obj"],"sources":["C:/Users/opc/Desktop/spotify-currently-playing/node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js"],"sourcesContent":["import { useTheme } from '@chakra-ui/system';\r\nimport { isBrowser, __DEV__, memoizedGet, isNumber, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\r\nimport * as React from 'react';\r\nimport React__default from 'react';\r\nimport { useEnvironment } from '@chakra-ui/react-env';\r\n\r\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\r\n/**\r\n * React hook that tracks state of a CSS media query\r\n *\r\n * @param query the media query to match\r\n */\r\n\r\nfunction useMediaQuery(query) {\r\n  var env = useEnvironment();\r\n  var queries = Array.isArray(query) ? query : [query];\r\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\r\n\r\n  var _React$useState = React.useState(queries.map(function (query) {\r\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\r\n  })),\r\n      matches = _React$useState[0],\r\n      setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\r\n  // to unload and then load each time the dependency changes. This causes\r\n  // Media Query Events to be missed. The event listeners should only be unloaded\r\n  // when the component unloads.\r\n\r\n\r\n  useSafeLayoutEffect(function () {\r\n    if (!isSupported) return undefined;\r\n    var mediaQueryList = queries.map(function (query) {\r\n      return env.window.matchMedia(query);\r\n    });\r\n    var listenerList = mediaQueryList.map(function (_, index) {\r\n      var listener = function listener(mqlEvent) {\r\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\r\n          return mediaQuery.media === mqlEvent.media;\r\n        }); // As the event listener is on the media query list, any time the\r\n        // listener is called, we know there is a change. There's no need\r\n        // to compare the previous matches with current. Using\r\n        // setMatches(matches => {...}) provides access to the current matches\r\n        // state.  Trying to access matches outside the setMatches function\r\n        // would provide data from the the time of instantiation (stale).\r\n\r\n        setMatches(function (matches) {\r\n          var currentMatches = matches.map(function (x) {\r\n            return x;\r\n          });\r\n          currentMatches[queryIndex] = mqlEvent.matches;\r\n          return currentMatches;\r\n        });\r\n      }; // Listening to the 'change' event on the Media Query List Object\r\n      // is more performant as the callback is only invoked when a specified\r\n      // media query is matched. Using addEventListener on the window object\r\n      // to listen for the resize event will call the callback on every\r\n      // viewport resize.\r\n\r\n\r\n      if (typeof mediaQueryList[index].addEventListener === \"function\") {\r\n        mediaQueryList[index].addEventListener(\"change\", listener);\r\n      } else {\r\n        mediaQueryList[index].addListener(listener);\r\n      }\r\n\r\n      return listener;\r\n    });\r\n    return function () {\r\n      mediaQueryList.forEach(function (_, index) {\r\n        if (typeof mediaQueryList[index].removeEventListener === \"function\") {\r\n          mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\r\n        } else {\r\n          mediaQueryList[index].removeListener(listenerList[index]);\r\n        }\r\n      });\r\n    };\r\n  }, []);\r\n  return matches;\r\n}\r\n\r\n/**\r\n * Visibility\r\n *\r\n * React component to control the visibility of its\r\n * children based on the current breakpoint\r\n */\r\nvar Visibility = function Visibility(props) {\r\n  var breakpoint = props.breakpoint,\r\n      hide = props.hide,\r\n      children = props.children;\r\n\r\n  var _useMediaQuery = useMediaQuery(breakpoint),\r\n      show = _useMediaQuery[0];\r\n\r\n  var isVisible = hide ? !show : show;\r\n  var rendered = isVisible ? children : null;\r\n  return rendered;\r\n};\r\n\r\nvar Hide = function Hide(props) {\r\n  var children = props.children;\r\n  var query = useQuery(props);\r\n  return /*#__PURE__*/React.createElement(Visibility, {\r\n    breakpoint: query,\r\n    hide: true\r\n  }, children);\r\n};\r\n\r\nif (__DEV__) {\r\n  Hide.displayName = \"Hide\";\r\n}\r\n\r\nvar Show = function Show(props) {\r\n  var children = props.children;\r\n  var query = useQuery(props);\r\n  return /*#__PURE__*/React.createElement(Visibility, {\r\n    breakpoint: query\r\n  }, children);\r\n};\r\n\r\nif (__DEV__) {\r\n  Show.displayName = \"Show\";\r\n}\r\n\r\nvar getBreakpoint = function getBreakpoint(theme, value) {\r\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\r\n};\r\n\r\nfunction useQuery(props) {\r\n  var _props$breakpoint = props.breakpoint,\r\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\r\n      below = props.below,\r\n      above = props.above;\r\n  var theme = useTheme();\r\n  var bpBelow = getBreakpoint(theme, below);\r\n  var bpAbove = getBreakpoint(theme, above);\r\n  var query = breakpoint;\r\n\r\n  if (bpBelow) {\r\n    query = \"(max-width: \" + bpBelow + \")\";\r\n  } else if (bpAbove) {\r\n    query = \"(min-width: \" + bpAbove + \")\";\r\n  }\r\n\r\n  return query;\r\n}\r\n\r\n/**\r\n * React hook used to get the user's animation preference.\r\n */\r\n\r\nfunction usePrefersReducedMotion() {\r\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\r\n      prefersReducedMotion = _useMediaQuery[0];\r\n\r\n  return prefersReducedMotion;\r\n}\r\n/**\r\n * React hook for getting the user's color mode preference.\r\n */\r\n\r\nfunction useColorModePreference() {\r\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\r\n      isLight = _useMediaQuery2[0],\r\n      isDark = _useMediaQuery2[1];\r\n\r\n  if (isLight) return \"light\";\r\n  if (isDark) return \"dark\";\r\n  return undefined;\r\n}\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nfunction createMediaQueries(breakpoints) {\r\n  return Object.entries(breakpoints) // sort css units in ascending order to ensure media queries are generated\r\n  // in the correct order and reference to each other correctly aswell\r\n  .sort(function (a, b) {\r\n    return Number.parseInt(a[1], 10) > Number.parseInt(b[1], 10) ? 1 : -1;\r\n  }).map(function (_ref, index, arr) {\r\n    var breakpoint = _ref[0],\r\n        minWidth = _ref[1];\r\n    // given a following breakpoint\r\n    var next = arr[index + 1]; // this breakpoint must end prior the threshold of the next\r\n\r\n    var maxWidth = next ? next[1] : undefined;\r\n    var query = createMediaQueryString(minWidth, maxWidth);\r\n    return {\r\n      minWidth: minWidth,\r\n      maxWidth: maxWidth,\r\n      breakpoint: breakpoint,\r\n      query: query\r\n    };\r\n  });\r\n}\r\n/**\r\n * Create a media query string from the breakpoints,\r\n * using a combination of `min-width` and `max-width`.\r\n */\r\n\r\nfunction createMediaQueryString(minWidth, maxWidth) {\r\n  var hasMinWidth = parseInt(minWidth, 10) >= 0;\r\n\r\n  if (!hasMinWidth && !maxWidth) {\r\n    return \"\";\r\n  }\r\n\r\n  var query = \"(min-width: \" + toMediaString(minWidth) + \")\";\r\n\r\n  if (!maxWidth) {\r\n    return query;\r\n  }\r\n\r\n  if (query) {\r\n    query += \" and \";\r\n  }\r\n\r\n  query += \"(max-width: \" + toMediaString(subtract(maxWidth)) + \")\";\r\n  return query;\r\n}\r\n\r\nvar measurementRegex = /([0-9]+\\.?[0-9]*)/;\r\n\r\nvar calculateMeasurement = function calculateMeasurement(value, modifier) {\r\n  if (typeof value === \"number\") {\r\n    return \"\" + (value + modifier);\r\n  }\r\n\r\n  return value.replace(measurementRegex, function (match) {\r\n    return \"\" + (parseFloat(match) + modifier);\r\n  });\r\n};\r\n/**\r\n * 0.01 and 0.1 are too small of a difference for `px` breakpoint values\r\n *\r\n * @see https://github.com/chakra-ui/chakra-ui/issues/2188#issuecomment-712774785\r\n */\r\n\r\n\r\nfunction subtract(value) {\r\n  return calculateMeasurement(value, value.endsWith(\"px\") ? -1 : -0.01);\r\n}\r\n/**\r\n * Convert media query value to string\r\n */\r\n\r\n\r\nfunction toMediaString(value) {\r\n  return isNumber(value) ? value + \"px\" : value;\r\n}\r\n\r\nvar _excluded = [\"query\"],\r\n    _excluded2 = [\"query\"],\r\n    _excluded3 = [\"query\"];\r\n\r\n/**\r\n * React hook used to get the current responsive media breakpoint.\r\n *\r\n * @param defaultBreakpoint default breakpoint name\r\n * (in non-window environments like SSR)\r\n *\r\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\r\n * to get the default breakpoint value from the user-agent\r\n */\r\nfunction useBreakpoint(defaultBreakpoint) {\r\n  var _useTheme = useTheme(),\r\n      breakpoints = _useTheme.breakpoints;\r\n\r\n  var env = useEnvironment();\r\n  var mediaQueries = React__default.useMemo(function () {\r\n    return createMediaQueries(_extends({\r\n      base: \"0px\"\r\n    }, breakpoints));\r\n  }, [breakpoints]);\r\n\r\n  var _React$useState = React__default.useState(function () {\r\n    if (env.window.matchMedia) {\r\n      var maxBreakpoint;\r\n      mediaQueries.forEach(function (_ref) {\r\n        var query = _ref.query,\r\n            breakpoint = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n\r\n        var mediaQuery = env.window.matchMedia(query);\r\n\r\n        if (mediaQuery.matches) {\r\n          maxBreakpoint = breakpoint;\r\n        }\r\n      });\r\n\r\n      if (maxBreakpoint) {\r\n        return maxBreakpoint;\r\n      }\r\n    }\r\n\r\n    if (!defaultBreakpoint) {\r\n      return undefined;\r\n    }\r\n\r\n    var mediaQuery = mediaQueries.find(function (_ref2) {\r\n      var breakpoint = _ref2.breakpoint;\r\n      return breakpoint === defaultBreakpoint;\r\n    });\r\n\r\n    if (mediaQuery) {\r\n      mediaQuery.query;\r\n          var breakpoint = _objectWithoutPropertiesLoose(mediaQuery, _excluded2);\r\n\r\n      return breakpoint;\r\n    }\r\n\r\n    return undefined;\r\n  }),\r\n      currentBreakpoint = _React$useState[0],\r\n      setCurrentBreakpoint = _React$useState[1];\r\n\r\n  var current = currentBreakpoint == null ? void 0 : currentBreakpoint.breakpoint;\r\n  var update = React__default.useCallback(function (query, breakpoint) {\r\n    if (query.matches && current !== breakpoint.breakpoint) {\r\n      setCurrentBreakpoint(breakpoint);\r\n    }\r\n  }, [current]);\r\n  React__default.useEffect(function () {\r\n    var listeners = new Set();\r\n    mediaQueries.forEach(function (_ref3) {\r\n      var query = _ref3.query,\r\n          breakpoint = _objectWithoutPropertiesLoose(_ref3, _excluded3);\r\n\r\n      var mediaQuery = env.window.matchMedia(query); // trigger an initial update to determine media query\r\n\r\n      update(mediaQuery, breakpoint);\r\n\r\n      var handleChange = function handleChange() {\r\n        update(mediaQuery, breakpoint);\r\n      }; // add media query-listener\r\n\r\n\r\n      mediaQuery.addListener(handleChange); // push the media query list handleChange\r\n      // so we can use it to remove Listener\r\n\r\n      listeners.add({\r\n        mediaQuery: mediaQuery,\r\n        handleChange: handleChange\r\n      });\r\n      return function () {\r\n        // clean up 1\r\n        mediaQuery.removeListener(handleChange);\r\n      };\r\n    });\r\n    return function () {\r\n      // clean up 2: for safety\r\n      listeners.forEach(function (_ref4) {\r\n        var mediaQuery = _ref4.mediaQuery,\r\n            handleChange = _ref4.handleChange;\r\n        mediaQuery.removeListener(handleChange);\r\n      });\r\n      listeners.clear();\r\n    };\r\n  }, [mediaQueries, breakpoints, update, env.window]);\r\n  return current;\r\n}\r\n\r\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\r\n  if (breakpoints$1 === void 0) {\r\n    breakpoints$1 = breakpoints;\r\n  }\r\n\r\n  var index = Object.keys(values).indexOf(breakpoint);\r\n\r\n  if (index !== -1) {\r\n    return values[breakpoint];\r\n  }\r\n\r\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\r\n\r\n  while (stopIndex >= 0) {\r\n    var key = breakpoints$1[stopIndex];\r\n\r\n    if (values[key] != null) {\r\n      index = stopIndex;\r\n      break;\r\n    }\r\n\r\n    stopIndex -= 1;\r\n  }\r\n\r\n  if (index !== -1) {\r\n    var _key = breakpoints$1[index];\r\n    return values[_key];\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * React hook for getting the value for the current breakpoint from the\r\n * provided responsive values object.\r\n *\r\n * @param values\r\n * @param defaultBreakpoint default breakpoint name\r\n * (in non-window environments like SSR)\r\n *\r\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\r\n * to get the default breakpoint value from the user-agent\r\n *\r\n * @example\r\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\r\n */\r\n\r\nfunction useBreakpointValue(values, defaultBreakpoint) {\r\n  var breakpoint = useBreakpoint(defaultBreakpoint);\r\n  var theme = useTheme();\r\n  if (!breakpoint) return undefined;\r\n  /**\r\n   * Get the non-number breakpoint keys from the provided breakpoints\r\n   */\r\n\r\n  var breakpoints = Object.keys(theme.breakpoints);\r\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\r\n    var key = _ref[0],\r\n        value = _ref[1];\r\n    return [key, value];\r\n  })) : values;\r\n  return getClosestValue(obj, breakpoint, breakpoints);\r\n}\r\n\r\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}