{"ast":null,"code":"import { useCallbackRef, useControllableProp } from '@chakra-ui/hooks';\nimport { countDecimalPlaces, clampValue, toPrecision, minSafeInteger, maxSafeInteger } from '@chakra-ui/utils';\nimport { useState, useCallback } from 'react';\nfunction useCounter(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    onChange = _props.onChange,\n    precisionProp = _props.precision,\n    defaultValue = _props.defaultValue,\n    valueProp = _props.value,\n    _props$step = _props.step,\n    stepProp = _props$step === void 0 ? 1 : _props$step,\n    _props$min = _props.min,\n    min = _props$min === void 0 ? minSafeInteger : _props$min,\n    _props$max = _props.max,\n    max = _props$max === void 0 ? maxSafeInteger : _props$max,\n    _props$keepWithinRang = _props.keepWithinRange,\n    keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang;\n  var onChangeProp = useCallbackRef(onChange);\n  var _useState = useState(function () {\n      var _cast;\n      if (defaultValue == null) return \"\";\n      return (_cast = cast(defaultValue, stepProp, precisionProp)) != null ? _cast : \"\";\n    }),\n    valueState = _useState[0],\n    setValue = _useState[1];\n  /**\r\n   * Because the component that consumes this hook can be controlled or uncontrolled\r\n   * we'll keep track of that\r\n   */\n\n  var _useControllableProp = useControllableProp(valueProp, valueState),\n    isControlled = _useControllableProp[0],\n    value = _useControllableProp[1];\n  var decimalPlaces = getDecimalPlaces(parse(value), stepProp);\n  var precision = precisionProp != null ? precisionProp : decimalPlaces;\n  var update = useCallback(function (next) {\n    if (next === value) return;\n    if (!isControlled) {\n      setValue(next.toString());\n    }\n    onChangeProp == null ? void 0 : onChangeProp(next.toString(), parse(next));\n  }, [onChangeProp, isControlled, value]); // Function to clamp the value and round it to the precision\n\n  var clamp = useCallback(function (value) {\n    var nextValue = value;\n    if (keepWithinRange) {\n      nextValue = clampValue(nextValue, min, max);\n    }\n    return toPrecision(nextValue, precision);\n  }, [precision, keepWithinRange, max, min]);\n  var increment = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n    var next;\n    /**\r\n     * Let's follow the native browser behavior for\r\n     * scenarios where the input starts empty (\"\")\r\n     */\n\n    if (value === \"\") {\n      /**\r\n       * If `min` is set, native input, starts at the `min`.\r\n       * Else, it starts at `step`\r\n       */\n      next = parse(step);\n    } else {\n      next = parse(value) + step;\n    }\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var decrement = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n    var next; // Same thing here. We'll follow native implementation\n\n    if (value === \"\") {\n      next = parse(-step);\n    } else {\n      next = parse(value) - step;\n    }\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var reset = useCallback(function () {\n    var next;\n    if (defaultValue == null) {\n      next = \"\";\n    } else {\n      var _cast2;\n      next = (_cast2 = cast(defaultValue, stepProp, precisionProp)) != null ? _cast2 : min;\n    }\n    update(next);\n  }, [defaultValue, precisionProp, stepProp, update, min]);\n  var castValue = useCallback(function (value) {\n    var _cast3;\n    var nextValue = (_cast3 = cast(value, stepProp, precision)) != null ? _cast3 : min;\n    update(nextValue);\n  }, [precision, stepProp, update, min]);\n  var valueAsNumber = parse(value);\n  /**\r\n   * Common range checks\r\n   */\n\n  var isOutOfRange = valueAsNumber > max || valueAsNumber < min;\n  var isAtMax = valueAsNumber === max;\n  var isAtMin = valueAsNumber === min;\n  return {\n    isOutOfRange: isOutOfRange,\n    isAtMax: isAtMax,\n    isAtMin: isAtMin,\n    precision: precision,\n    value: value,\n    valueAsNumber: valueAsNumber,\n    update: update,\n    reset: reset,\n    increment: increment,\n    decrement: decrement,\n    clamp: clamp,\n    cast: castValue,\n    setValue: setValue\n  };\n}\nfunction parse(value) {\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\n}\nfunction getDecimalPlaces(value, step) {\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\n}\nfunction cast(value, step, precision) {\n  var parsedValue = parse(value);\n  if (Number.isNaN(parsedValue)) return undefined;\n  var decimalPlaces = getDecimalPlaces(parsedValue, step);\n  return toPrecision(parsedValue, precision != null ? precision : decimalPlaces);\n}\nexport { useCounter };","map":{"version":3,"names":["useCallbackRef","useControllableProp","countDecimalPlaces","clampValue","toPrecision","minSafeInteger","maxSafeInteger","useState","useCallback","useCounter","props","_props","onChange","precisionProp","precision","defaultValue","valueProp","value","_props$step","step","stepProp","_props$min","min","_props$max","max","_props$keepWithinRang","keepWithinRange","onChangeProp","_useState","_cast","cast","valueState","setValue","_useControllableProp","isControlled","decimalPlaces","getDecimalPlaces","parse","update","next","toString","clamp","nextValue","increment","decrement","reset","_cast2","castValue","_cast3","valueAsNumber","isOutOfRange","isAtMax","isAtMin","parseFloat","replace","Math","parsedValue","Number","isNaN","undefined"],"sources":["C:/Users/opc/Desktop/spotify-currently-playing/node_modules/@chakra-ui/counter/dist/chakra-ui-counter.esm.js"],"sourcesContent":["import { useCallbackRef, useControllableProp } from '@chakra-ui/hooks';\r\nimport { countDecimalPlaces, clampValue, toPrecision, minSafeInteger, maxSafeInteger } from '@chakra-ui/utils';\r\nimport { useState, useCallback } from 'react';\r\n\r\nfunction useCounter(props) {\r\n  if (props === void 0) {\r\n    props = {};\r\n  }\r\n\r\n  var _props = props,\r\n      onChange = _props.onChange,\r\n      precisionProp = _props.precision,\r\n      defaultValue = _props.defaultValue,\r\n      valueProp = _props.value,\r\n      _props$step = _props.step,\r\n      stepProp = _props$step === void 0 ? 1 : _props$step,\r\n      _props$min = _props.min,\r\n      min = _props$min === void 0 ? minSafeInteger : _props$min,\r\n      _props$max = _props.max,\r\n      max = _props$max === void 0 ? maxSafeInteger : _props$max,\r\n      _props$keepWithinRang = _props.keepWithinRange,\r\n      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang;\r\n  var onChangeProp = useCallbackRef(onChange);\r\n\r\n  var _useState = useState(function () {\r\n    var _cast;\r\n\r\n    if (defaultValue == null) return \"\";\r\n    return (_cast = cast(defaultValue, stepProp, precisionProp)) != null ? _cast : \"\";\r\n  }),\r\n      valueState = _useState[0],\r\n      setValue = _useState[1];\r\n  /**\r\n   * Because the component that consumes this hook can be controlled or uncontrolled\r\n   * we'll keep track of that\r\n   */\r\n\r\n\r\n  var _useControllableProp = useControllableProp(valueProp, valueState),\r\n      isControlled = _useControllableProp[0],\r\n      value = _useControllableProp[1];\r\n\r\n  var decimalPlaces = getDecimalPlaces(parse(value), stepProp);\r\n  var precision = precisionProp != null ? precisionProp : decimalPlaces;\r\n  var update = useCallback(function (next) {\r\n    if (next === value) return;\r\n\r\n    if (!isControlled) {\r\n      setValue(next.toString());\r\n    }\r\n\r\n    onChangeProp == null ? void 0 : onChangeProp(next.toString(), parse(next));\r\n  }, [onChangeProp, isControlled, value]); // Function to clamp the value and round it to the precision\r\n\r\n  var clamp = useCallback(function (value) {\r\n    var nextValue = value;\r\n\r\n    if (keepWithinRange) {\r\n      nextValue = clampValue(nextValue, min, max);\r\n    }\r\n\r\n    return toPrecision(nextValue, precision);\r\n  }, [precision, keepWithinRange, max, min]);\r\n  var increment = useCallback(function (step) {\r\n    if (step === void 0) {\r\n      step = stepProp;\r\n    }\r\n\r\n    var next;\r\n    /**\r\n     * Let's follow the native browser behavior for\r\n     * scenarios where the input starts empty (\"\")\r\n     */\r\n\r\n    if (value === \"\") {\r\n      /**\r\n       * If `min` is set, native input, starts at the `min`.\r\n       * Else, it starts at `step`\r\n       */\r\n      next = parse(step);\r\n    } else {\r\n      next = parse(value) + step;\r\n    }\r\n\r\n    next = clamp(next);\r\n    update(next);\r\n  }, [clamp, stepProp, update, value]);\r\n  var decrement = useCallback(function (step) {\r\n    if (step === void 0) {\r\n      step = stepProp;\r\n    }\r\n\r\n    var next; // Same thing here. We'll follow native implementation\r\n\r\n    if (value === \"\") {\r\n      next = parse(-step);\r\n    } else {\r\n      next = parse(value) - step;\r\n    }\r\n\r\n    next = clamp(next);\r\n    update(next);\r\n  }, [clamp, stepProp, update, value]);\r\n  var reset = useCallback(function () {\r\n    var next;\r\n\r\n    if (defaultValue == null) {\r\n      next = \"\";\r\n    } else {\r\n      var _cast2;\r\n\r\n      next = (_cast2 = cast(defaultValue, stepProp, precisionProp)) != null ? _cast2 : min;\r\n    }\r\n\r\n    update(next);\r\n  }, [defaultValue, precisionProp, stepProp, update, min]);\r\n  var castValue = useCallback(function (value) {\r\n    var _cast3;\r\n\r\n    var nextValue = (_cast3 = cast(value, stepProp, precision)) != null ? _cast3 : min;\r\n    update(nextValue);\r\n  }, [precision, stepProp, update, min]);\r\n  var valueAsNumber = parse(value);\r\n  /**\r\n   * Common range checks\r\n   */\r\n\r\n  var isOutOfRange = valueAsNumber > max || valueAsNumber < min;\r\n  var isAtMax = valueAsNumber === max;\r\n  var isAtMin = valueAsNumber === min;\r\n  return {\r\n    isOutOfRange: isOutOfRange,\r\n    isAtMax: isAtMax,\r\n    isAtMin: isAtMin,\r\n    precision: precision,\r\n    value: value,\r\n    valueAsNumber: valueAsNumber,\r\n    update: update,\r\n    reset: reset,\r\n    increment: increment,\r\n    decrement: decrement,\r\n    clamp: clamp,\r\n    cast: castValue,\r\n    setValue: setValue\r\n  };\r\n}\r\n\r\nfunction parse(value) {\r\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\r\n}\r\n\r\nfunction getDecimalPlaces(value, step) {\r\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\r\n}\r\n\r\nfunction cast(value, step, precision) {\r\n  var parsedValue = parse(value);\r\n  if (Number.isNaN(parsedValue)) return undefined;\r\n  var decimalPlaces = getDecimalPlaces(parsedValue, step);\r\n  return toPrecision(parsedValue, precision != null ? precision : decimalPlaces);\r\n}\r\n\r\nexport { useCounter };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}