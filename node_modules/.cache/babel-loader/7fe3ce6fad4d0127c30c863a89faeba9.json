{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Desktop/repos/spotify-currently-playing/src/spotify/SpotifyNowPlaying.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Stack, Image, Text, Link, Spinner } from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\nimport getNowPlayingItem from \"./SpotifyAPI\";\nimport SpotifyLogo from \"./SpotifyLogo\";\nimport PlayingAnimation from \"./PlayingAnimation\";\n\nconst SpotifyNowPlaying = props => {\n  const [loading, setLoading] = useState(true);\n  const [result, setResult] = useState({});\n  useEffect(() => {\n    Promise.all([getNowPlayingItem(props.client_id, props.client_secret, props.refresh_token)]).then(results => {\n      setResult(results[0]);\n      setLoading(false);\n    });\n  });\n  return /*#__PURE__*/React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Stack, {\n    align: \"center\",\n    mb: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"md\",\n    speed: \"0.6s\",\n    thickness: 3,\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Stack, {\n    width: \"full\",\n    mb: result.isPlaying ? 2 : 4,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: 2,\n    direction: \"row\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SpotifyLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, result.isPlaying ? 'Now playing' : \"Currently offline\"), result.isPlaying && /*#__PURE__*/React.createElement(PlayingAnimation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 36\n    }\n  })), result.isPlaying && /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    borderRadius: \"lg\",\n    borderWidth: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    spacing: 4,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    alt: `${result.title} album art`,\n    src: result.albumImageUrl,\n    width: 12,\n    height: 12,\n    borderRadius: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Stack, {\n    spacing: 0,\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: result.songUrl,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: \"semibold\",\n    width: \"full\",\n    isTruncated: true,\n    color: \"alph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }\n  }, result.title)), /*#__PURE__*/React.createElement(Text, {\n    color: \"gray.500\",\n    isTruncated: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, result.artist), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })))))));\n};\n\nexport default SpotifyNowPlaying;\nconst Center = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;","map":{"version":3,"sources":["/Users/steve/Desktop/repos/spotify-currently-playing/src/spotify/SpotifyNowPlaying.js"],"names":["React","useEffect","useState","Box","Stack","Image","Text","Link","Spinner","styled","getNowPlayingItem","SpotifyLogo","PlayingAnimation","SpotifyNowPlaying","props","loading","setLoading","result","setResult","Promise","all","client_id","client_secret","refresh_token","then","results","isPlaying","title","albumImageUrl","songUrl","artist","Center","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Stack,\n  Image,\n  Text,\n  Link,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\nimport getNowPlayingItem from \"./SpotifyAPI\";\nimport SpotifyLogo from \"./SpotifyLogo\";\nimport PlayingAnimation from \"./PlayingAnimation\";\n\nconst SpotifyNowPlaying = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [result, setResult] = useState({});\n\n  useEffect(() => {\n    Promise.all([\n      getNowPlayingItem(\n        props.client_id,\n        props.client_secret,\n        props.refresh_token\n      ),\n    ]).then((results) => {\n      setResult(results[0]);\n      setLoading(false);\n    });\n  });\n\n  return (\n    <Center>\n      <Box width=\"sm\">\n        {loading ?\n          <Stack align=\"center\" mb={8}>\n            <Spinner size=\"md\" speed=\"0.6s\" thickness={3} color=\"gray.500\" />\n          </Stack>\n          :\n          <Stack width=\"full\" mb={result.isPlaying ? 2 : 4} spacing={3}>\n            <Stack spacing={2} direction=\"row\" align=\"center\">\n              <SpotifyLogo />\n              <Text fontWeight=\"semibold\">{result.isPlaying ? 'Now playing' : \"Currently offline\"}</Text>\n              {result.isPlaying && <PlayingAnimation />}\n            </Stack>\n            {result.isPlaying &&\n              <Box p={2} borderRadius=\"lg\" borderWidth={1}>\n                <Stack direction=\"row\" spacing={4} align=\"center\">\n                  <Image\n                    alt={`${result.title} album art`}\n                    src={result.albumImageUrl}\n                    width={12}\n                    height={12}\n                    borderRadius=\"sm\"\n                  />\n                  <Stack spacing={0} overflow=\"hidden\">\n                    <Link href={result.songUrl} target=\"_blank\">\n                      <Text\n                        fontWeight=\"semibold\"\n                        width=\"full\"\n                        isTruncated\n                        color=\"alph\"\n                      >\n                        {result.title}\n                      </Text>\n                    </Link>\n                    <Text\n                      color=\"gray.500\"\n                      isTruncated\n                    >\n                      {result.artist}\n                    </Text>\n                    <Text></Text>\n                  </Stack>\n                </Stack>\n              </Box>\n            }\n          </Stack>\n        }\n      </Box>\n    </Center>\n  )\n};\n\nexport default SpotifyNowPlaying;\n\nconst Center = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;"]},"metadata":{},"sourceType":"module"}